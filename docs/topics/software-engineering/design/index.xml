<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design on Gabriele Angeletti</title><link>https://gabrieleangeletti.github.io/docs/topics/software-engineering/design/</link><description>Recent content in Design on Gabriele Angeletti</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://gabrieleangeletti.github.io/docs/topics/software-engineering/design/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://gabrieleangeletti.github.io/docs/topics/software-engineering/design/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gabrieleangeletti.github.io/docs/topics/software-engineering/design/api/</guid><description>API design # NENO (non-exhaustive, non-ordered) list of questions to keep in mind and ask yourself when designing an API, or any software for that matter.
Imagine a developer with zero knowledge of your API starts using it. How long will they take to be proficient with it? How much new knowledge do they need to acquire? How much prior knowledge can they reuse? If I imagine myself using this API tomorrow, would that be a pleasurable experience?</description></item><item><title/><link>https://gabrieleangeletti.github.io/docs/topics/software-engineering/design/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gabrieleangeletti.github.io/docs/topics/software-engineering/design/code/</guid><description>Writing code # NENO (non-exhaustive, non-ordered) list of things to think about when writing code:
Abstract common tasks to reduce bugs # When you write code that does the same thing over and over it&amp;rsquo;s time to abstract it. It&amp;rsquo;s good to re-use code and it decreases the chances for bugs. When you write the same thing over and over, at some point you will forget something. For example, consider this code:</description></item></channel></rss>