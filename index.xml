<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gabriele Angeletti</title><link>https://gabrieleangeletti.github.io/</link><description>Recent content on Gabriele Angeletti</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://gabrieleangeletti.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://gabrieleangeletti.github.io/docs/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gabrieleangeletti.github.io/docs/about/</guid><description>About me #</description></item><item><title>Contact</title><link>https://gabrieleangeletti.github.io/docs/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gabrieleangeletti.github.io/docs/contact/</guid><description>Contact # You can contact me through:
Email: angeletti.gabriele@gmail.com LinkedIn Twitter</description></item><item><title/><link>https://gabrieleangeletti.github.io/docs/topics/mental-models/bias/confirmation-bias/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gabrieleangeletti.github.io/docs/topics/mental-models/bias/confirmation-bias/</guid><description>Confirmation bias # Introduction # Confirmation bias is a mental model in which we cherry-pick evidence that confirms our beliefs while rejecting or ignoring anything that goes against them. This tendence is stronger in case of ideologically or emotionally charged arguments.
When we want a certain idea to be true, and we end up thinking and acting as if it was true, that is confirmation bias in action. Our eyes and brains filter out any information that would disprove what we have already decided to be true beyond doubt.</description></item><item><title/><link>https://gabrieleangeletti.github.io/docs/topics/software-engineering/design/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gabrieleangeletti.github.io/docs/topics/software-engineering/design/api/</guid><description>API design # NENO (non-exhaustive, non-ordered) list of questions to keep in mind and ask yourself when designing an API, or any software for that matter.
Imagine a developer with zero knowledge of your API starts using it. How long will they take to be proficient with it? How much new knowledge do they need to acquire? How much prior knowledge can they reuse? If I imagine myself using this API tomorrow, would that be a pleasurable experience?</description></item><item><title/><link>https://gabrieleangeletti.github.io/docs/topics/software-engineering/design/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gabrieleangeletti.github.io/docs/topics/software-engineering/design/code/</guid><description>Writing code # NENO (non-exhaustive, non-ordered) list of things to think about when writing code:
Abstract common tasks to reduce bugs # When you write code that does the same thing over and over it&amp;rsquo;s time to abstract it. It&amp;rsquo;s good to re-use code and it decreases the chances for bugs. When you write the same thing over and over, at some point you will forget something. For example, consider this code:</description></item><item><title/><link>https://gabrieleangeletti.github.io/docs/topics/software-engineering/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gabrieleangeletti.github.io/docs/topics/software-engineering/python/</guid><description>Python # bar.</description></item></channel></rss>